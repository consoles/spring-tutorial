<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

	<bean id="customerService" class="ren.consoles.spring.aop.pointcut.CustomerService">
		<property name="name" value="大梦初晓" />
		<property name="url" value="https://github.com/u/consoles" />
	</bean>

	<bean id="hijackAroundMethodBean" class="ren.consoles.spring.aop.pointcut.HijackAroundMethod" />
	<!-- 使用pointcut和advisor拦截特定方法 -->
	<bean id="customerPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">
		<property name="mappedName" value="printName" />
	</bean>
	<!-- 创建一个DefaultPointcutAdvisor的advisor bean，将pointcut和advice关联起来,充当Advice和Pointcut的适配器 -->
	<bean id="customerAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="pointcut" ref="customerPointcut" />
		<property name="advice" ref="hijackAroundMethodBean" />
	</bean>
	<!-- 以上的声明切点，再创建advisor的操作可以合并为以下的一步操作,
	  但是这种做法将method名字与具体的advice捆绑在一起，有悖于Spring松耦合理念，
	  如果将method名字单独配置成pointcut（切入点），advice和pointcut的结合会更灵活 -->
	<bean id="customerAdvisor2" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="mappedName" value="printName" />
		<property name="advice" ref="hijackAroundMethodBean" />
	</bean>
	<!-- 使用RE拦截含有特定字符的方法,在实际的编程中我们可以用它来管理DAO层，例如，你可以用“.*DAO.*”来拦截所有DAO层中的相关业务。    -->
	<bean id="customerAdvisor3" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="patterns">
            <list>
                <value>.*URL.*</value>
            </list>
        </property>
        <property name="advice" ref="hijackAroundMethodBean" />
    </bean>
	<bean id="customerServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="customerService" />
		<property name="interceptorNames">
			<list>
				<!-- 
				<value>customerAdvisor</value>
				 -->
				 <!-- 
				<value>customerAdvisor2</value>
				 -->
				 <!-- RE -->
				<value>customerAdvisor3</value>
			</list>
		</property>
	</bean>

</beans>